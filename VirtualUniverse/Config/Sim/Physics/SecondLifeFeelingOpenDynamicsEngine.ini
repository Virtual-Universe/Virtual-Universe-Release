[ODEPhysicsSettings]
;; ##
;; ## Performance settings
;; ##

;; Enable auto disabling of prims after they almost stop moving. 
;;  This may make things a bit less realistic, but will improve FPS in sims with many
;;  physical objects by approximately 100%.
DisableSlowPrims = true

;; Change Physics settings to increase FPS when the sim slows down.
EnableAutoConfig = true

;; ##
;; ## World Settings
;; ##

;; ##
;; ## Avatar Settings
;; ##

;; The amount to decay the avatar's movement each step in the physics engine
;; Lower is faster
avDecayTime = 0.95

;; ##
;; ## Jump Settings
;; ##

;; Should the avatar even be able to jump?
AllowJump = true

;; Should there be a small delay before jumping?
UsePreJump = true

;; The time to wait before jumping (for pre-jump) in frames
PreJumpTime = 15

;; The amount to multiply the jump by (can have a decimal point)
;; Second Life feeling
PreJumpMultiplierX = 6
PreJumpMultiplierY = 6
PreJumpMultiplierZ = 12.0

;; ##
;; ## Gravity Settings
;; ##

;; Normal Gravity.  Feel like falling up?  change world_gravity to 9.8 instead of -9.8.  m/s
world_gravityx = 0
world_gravityy = 0
world_gravityz = -9.8

;; ##
;; ## Point Gravity Settings
;; ##

;; Point Gravity.  Feel like having gravity center around some point in your sim? Set this to true.
usePointGravity = false

;; The coordinates of the point of gravity
;; Note: setting one to '0' disables gravity in that direction
point_gravityx = 0
point_gravityy = 0
point_gravityz = 0

;; ##
;; ## Avatar Gravity Settings
;; ##

;; Makes avatars have gravity effect them as well once they reach a certain height
useAvGravity = true

;; Height to start applying gravity
avGravityHeight = 4096

;; Allow avatars to escape gravity by flying up
aviesCanEscapeGravity = true

;; How many times faster the avatar will fly than a walking avatar
AvFlySpeed = 4.5

;; Walk speed.  Smaller is faster.
;; speed of movement with Always Run off
WalkSpeed = 1.5

;; Run speed.  Smaller is faster.
;; Speed of movement with Always Run on
RunSpeed = 1.15

;; ##
;; ## Under-water physics Settings
;; ##

;; Makes avatars float and look as if they are swimming on the water.
useUnderWaterPhysics = false

;; ##
;; ## Max Flight Height for avatars (ported from Rex, thanks!)
;; ## This enforces a maximum height for avatars and prims
;; ##

;; Is this enabled?
Use_Flight_Ceiling_Height_Max = false

;; Max height in meters
Flight_Ceiling_Height_Max = 4096

;; ##
;; ## Advanced Settings
;; ##

;; World Step size.
;;  (warning these are dangerous.  Changing these will probably cause your scene to explode dramatically)
;; reference: fps = (0.089/ODE_STEPSIZE) * 1000
world_stepsize = 0.0178

;; Smaller means less iterations through the simulation between frames
;; Default is 10
world_internal_steps_without_collisions = 5

;; ##
;; ## Contact properties. (the stuff that happens when things come in contact with each other)
;; ##

;; surface layer around geometries other geometries can sink into before generating a contact
world_contact_surface_layer = 0.001

;; Filtering collisions helps keep things stable physics wise, but sometimes
;; it can be overzealous.  If you notice bouncing, chances are it's that.
;; This also uses up a large amount of CPU and will lower frame rates in sims with lots of physical objects
filter_collisions = false

;; Moving Avatar to object Contact
m_avatarobjectcontact_friction = 15.0
m_avatarobjectcontact_bounce = 0.1

;; Object to Object Contact and Non-Moving Avatar to object
objectcontact_friction = 1000.0
objectcontact_bounce = 0.2

;; ##
;; ## Avatar Control
;; ##

;; PID Controller Settings. These affect the math that causes the avatar to reach the
;; desired velocity
;; See http://en.wikipedia.org/wiki/PID_controller

av_pid_derivative = 2200.0
av_pid_proportional = 900.0

;; girth of the avatar.  Adds radius to the height also
av_capsule_radius = 0.37

;; When the avatar flies, it will be moved up by this amount off the ground (in meters)
minimum_ground_flight_offset = 6.0

;; ##
;; ## Object options
;; ##

;; used in the mass calculation.
geometry_default_density = 10.000006836

;; amount of ODE steps where object is non moving for ODE to automatically put it to sleep
body_frames_auto_disable = 10

;; used to control llMoveToTarget
body_pid_derivative = 35
body_pid_gain = 25

;; maximum number of contact points to generate per collision
contacts_per_collision = 80

;; amount of time a geom/body will try to cross a region border before it gets disabled
geom_crossing_failures_before_outofbounds = 2

;; start throttling the object updates if object comes in contact with 3 or more other objects
geom_contactpoints_start_throttling = 3

;; send 1 update for every x updates below when throttled
geom_updates_before_throttled_update = 7

;; Maximum mass an object can be before it is clamped
;; If this is increased too far, the sim will 'deep think' and freeze
maximum_mass_object = 100000.01

;; ##
;; ## Sculpted Prim settings
;; ##

;; Do we want to mesh sculpted prim to collide like they look?
mesh_sculpted_prim = true

;; number^2 non-physical level of detail of the sculpt texture.  32x32 - 1024 vertices
;; This controls how detailed the sculpt looks
mesh_lod = 32

;; number^2 physical level of detail of the sculpt texture.  16x16 - 256 vertices
;; This controls the detail of the physical sculpt
mesh_physical_lod = 16

;; Physical collision mesh proxies are normally created for complex prim shapes, and 
;;  collisions for simple boxes and spheres are computed algorithmically.
;;  If you would rather have mesh proxies for simple prims, you can set this to true.
;;  Note that this will increase memory usage and region startup time. 
;; Default is false.
force_simple_prim_meshing = false
